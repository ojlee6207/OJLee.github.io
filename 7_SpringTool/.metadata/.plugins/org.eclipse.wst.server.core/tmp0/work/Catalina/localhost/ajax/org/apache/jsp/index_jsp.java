/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-04-17 02:52:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1712547926044L));
    _jspx_dependants.put("jar:file:/C:/Workspace/7_SpringTool/ajaxProject/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>ajax 테스트</title>\r\n");
      out.write("	<!-- JQuery -->\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" \r\n");
      out.write("	integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" \r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>Spring에서 AJAX 사용</h1>\r\n");
      out.write("	\r\n");
      out.write("	<h3>* 요청 시 값 전달 후 응답받기</h3>	\r\n");
      out.write("		<label>이름 :</label>\r\n");
      out.write("		<input type=\"text\" id=\"name\" /><br>\r\n");
      out.write("		<label>나이 :</label>\r\n");
      out.write("		<input type=\"number\" id=\"age\" /><br>\r\n");
      out.write("	<!-- 버튼 클릭 이벤트 처리 (1)	\r\n");
      out.write("		<button id=\"btn\">전송</button>\r\n");
      out.write("	<script>\r\n");
      out.write("		$(\"#btn\").click(function(){\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("	</script>  -->\r\n");
      out.write("	<button onclick=\"ajaxTest1();\">전송1</button>\r\n");
      out.write("	<script>\r\n");
      out.write("		const ajaxTest1 = () => {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'ajax1.do',\r\n");
      out.write("				data: {\r\n");
      out.write("					name: $(\"#name\").val() , \r\n");
      out.write("					age: $(\"#age\").val()\r\n");
      out.write("				},\r\n");
      out.write("				success: function(result) {\r\n");
      out.write("					console.log(result);\r\n");
      out.write("				},\r\n");
      out.write("				error: function(){\r\n");
      out.write("					console.log(\"Ajax 1 통신 실패\");\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<h3>* 다수의 응답데이터 처리</h3>\r\n");
      out.write("	<button onclick=\"ajaxTest2();\">전송2</button>\r\n");
      out.write("	<script>\r\n");
      out.write("		const ajaxTest2 = () => {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'ajax2.do',\r\n");
      out.write("				data: {\r\n");
      out.write("					name: $(\"#name\").val(),\r\n");
      out.write("					age: $(\"#age\").val()\r\n");
      out.write("				},\r\n");
      out.write("				success: function(result) {\r\n");
      out.write("					console.log(result);\r\n");
      out.write("				},\r\n");
      out.write("				error: function() {\r\n");
      out.write("					console.log(\"ajax 2 통신 실패\");			\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h3>* 회원번호 입력 후 회원정보 조회하기</h3>\r\n");
      out.write("	회원번호 : <input type=\"number\" id=\"userNo\" />\r\n");
      out.write("	<button id=\"searchBtn\">조회</button>\r\n");
      out.write("	<div id=\"userInfo\"></div>\r\n");
      out.write("	<script>\r\n");
      out.write("		// 모든 요소들이 화면에 표시된 후, 조회버튼 클릭 시 ajax 요청\r\n");
      out.write("		// -url : search.me\r\n");
      out.write("		// -data : { no: 입력한 회원번호}\r\n");
      out.write("		$(function() {\r\n");
      out.write("			$(\"#searchBtn\").click(function(){\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url: \"search.me\",\r\n");
      out.write("					data: { no: $(\"#userNo\").val() },\r\n");
      out.write("					success:function(data){\r\n");
      out.write("						console.log(data);\r\n");
      out.write("						\r\n");
      out.write("						let value=\"<ul>\"\r\n");
      out.write("									+\"<li>이름: \"+data.userName+\"</li>\"\r\n");
      out.write("									+\"<li>나이: \"+data.age+\"</li>\"\r\n");
      out.write("									+\"<li>아이디: \"+data.userId+\"</li>\"\r\n");
      out.write("									+\"<li>비밀번호: \"+data['userPwd']+\"</li>\"\r\n");
      out.write("									+\"<li>연락처: \"+data['phone']+\"</li>\"\r\n");
      out.write("								  +\"</ul>\";\r\n");
      out.write("						$(\"#userInfo\").html(value);\r\n");
      out.write("					},\r\n");
      out.write("					error:function(){\r\n");
      out.write("						console.log(\"search 통신 실패\")\r\n");
      out.write("					}\r\n");
      out.write("				\r\n");
      out.write("				})\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h3>* 회원 목록(리스트) 조회하기</h3>\r\n");
      out.write("	<button onclick=\"searchMemberList();\">목록 조회</button>\r\n");
      out.write("	<br><br>\r\n");
      out.write("	<table id=\"memberList\" border=\"1\">\r\n");
      out.write("		<thead>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>아이디</th>\r\n");
      out.write("				<th>이름</th>\r\n");
      out.write("				<th>나이</th>\r\n");
      out.write("				<th>연락처</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</thead>\r\n");
      out.write("		<tbody>\r\n");
      out.write("		\r\n");
      out.write("		</tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("	<script>\r\n");
      out.write("		const searchMemberList = () => {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: \"searchMembers.me\",\r\n");
      out.write("				success: function(list) {\r\n");
      out.write("					console.log(list);\r\n");
      out.write("					let value = \"\";\r\n");
      out.write("					\r\n");
      out.write("					for(let i in list) {\r\n");
      out.write("						value += \"<tr>\"\r\n");
      out.write("							+\"<td>\"+list[i].userId+\"</td>\"\r\n");
      out.write("							+\"<td>\"+list[i].userName+\"</td>\"\r\n");
      out.write("							+\"<td>\"+list[i].age+\"</td>\"\r\n");
      out.write("							+\"<td>\"+list[i].phone+\"</td>\"\r\n");
      out.write("							+\"</tr>\"\r\n");
      out.write("					}\r\n");
      out.write("					$(\"#memberList > tbody\").html(value);\r\n");
      out.write("				},\r\n");
      out.write("				error: function(){\r\n");
      out.write("					console.log(\"ajax 통신 망\")\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("			})\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
