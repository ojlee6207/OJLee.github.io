package com.kh.email.controller;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.kh.email.model.vo.EmailDetail;

import jakarta.mail.internet.MimeMessage;
import jakarta.servlet.http.HttpSession;

@Controller
public class MailController {

	@Autowired
	private JavaMailSender mailSender;
	
	@Value("${spring.mail.username}")
	private String sender;

	@ResponseBody
	@RequestMapping("sendMail.do")
	public String sendMail(EmailDetail mail, MultipartFile upfile, HttpSession session) throws Exception {
		
		MimeMessage message = mailSender.createMimeMessage();
		MimeMessageHelper msgHelper = new MimeMessageHelper(message, true, "UTF-8");
		
		msgHelper.setSubject(mail.getSubject());
		msgHelper.setText(mail.getContent());
		msgHelper.setTo(mail.getReceiver());
		msgHelper.setFrom(sender, "[KH] 테스트 메일");
		if (!upfile.getOriginalFilename().equals("")) {
			String chgName = saveFile(upfile, session);
			mail.setFilename("/static/resources/upfiles/"+upfile.getOriginalFilename());
		}
		msgHelper.addAttachment(mail.getFilename(), upfile);
		
		mailSender.send(message);
		
		return "success";
	}
	
	// 요청 시 첨부파일이 있는 경우 특정 폴더에 저장시키는 기능을 수행하는 메소드
	public String saveFile(MultipartFile upfile, HttpSession session) {
		String orgName = upfile.getOriginalFilename();
		
		String currTime = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());
		int randNum = (int)(Math.random()*90000+10000); // 5자리 랜덤값
		String ext = orgName.substring(orgName.lastIndexOf("."));
		
		String chgName = currTime + randNum + ext;
		
		// 업로드할 파일의 물리적인 경로 조회
		String savePath = session.getServletContext().getRealPath("/resources/upfiles/");

		try {
			upfile.transferTo(new File(savePath+chgName));
		} catch (IllegalStateException | IOException e) {
			e.printStackTrace();
		}
		
		return chgName;
	}
}
